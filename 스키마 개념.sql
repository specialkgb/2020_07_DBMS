/*
================================================================================
스키마
================================================================================
1. 데이터베이스 공학에서는
   자료의 구조, 자료의 표현방법, 자료간의 관계를 형식언어로 정의한 구조
   
2. DBMS실무차원에서는
   데이터베이스 사용자(DBA, 일반사용자, 개발자)가 CRUD (C :추가, R : 조회, 
   U : 업데이트, D : 삭제) 를 수행할 때 DBMS 자신이 생성한 자료의 저장소, 저장공간,
   저장형태 등을 표현하는 논리적인 집합체
   
3. 생성 TABLE, View, Index등의 DB 객체(Object)의 묶음 개념
4. 각 계층별로 표현을 하면
   가. 운영체제 차원에서 관리하는 스키마 : 로컬디스크, 스토리지(분산, 원격 디스크) 등에 
       어떤 방식으로 데이터를 저장, 관리할 것인가 하는 관점
   나. 사용자 차원에서 관리하는 스키마 : SQL 명령을 통해서 CRUD를 수행할 때
       사용자가 내린 명령이 어떻게 스토리지에 반영되는 몰라도 데이터를 모든 데이터는
       (엑셀의 Sheet와 같은) Table 구조로 되어있다 라고 인식하는 관점
   다. DBMS 소프트웨어 차원에서 관리하는 스키마 : 사용자가 내린 SQL 명령문을 운영체제
       차원의 명령으로 기술적인 변환을 하고 운영체제가 응답하는 데이터의 묶음(결과)를
       Table 형태로 변환하는 그러한 관점에서 바라보는 스키마
       
5. 3대 스키마
   가. 운영체제 차원에서 관리하는 스키마 : 내부스키마
   나. 사용자 차원에서 관리하는 스키마 : 외부 스키마
   다. DBMS 소프트웨어 차원에서 관리하는 스키마 : 개념스키마
6. DBMS 소프트웨어 마다 사용자 차원의 외부 스키마를 관리하는 방법 조금씩 다르다
   가. 오라클 : User ID 별로 스키마를 관리한다. 
       User ID 별도로 TableSpace를 사용자가 임의의 위치에지정할 수 있도록 하고 있다.
   나. MySQL : DataBase라는 것으로 스키마를 관리한다.
       DataBase가 저장되는 물리적 저장공간을 임의로 지정하는 것이 조금 어렵다.
*/